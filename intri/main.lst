     1                                  section .data
     2                                  
     3 00000000 00000000000000C001-     num dt -6.0
     3 00000009 C0                 
     4                                  
     5 0000000A 000000000000008001-     x dt 4.0
     5 00000013 40                 
     6 00000014 000000000000008000-     y dt 2.0
     6 0000001D 40                 
     7 0000001E 0000000000000080FF-     z dt 1.0
     7 00000027 3F                 
     8                                  
     9 00000028 000000000000008000-     a dt -2.0
     9 00000031 C0                 
    10 00000032 000000000000008001-     b dt 4.0
    10 0000003B 40                 
    11 0000003C 0000000000000080FF-     c dt 1.0
    11 00000045 3F                 
    12                                  
    13 00000046 6C6573730A              msg1 db "less", 10
    14                                  len1 equ $ - msg1
    15 0000004B 65710A                  msg2 db "eq", 10
    16                                  len2 equ $ - msg2
    17 0000004E 67726561740A            msg3 db "great", 10
    18                                  len3 equ $ - msg3
    19                                  
    20                                  section .text
    21                                  global _start
    22                                  
    23                                  ;------------------------------------------------------------------------------
    24                                  ; PROCEDURE:    norm
    25                                  ; IN:           st0, st1, st2: x, y, z
    26                                  ; OUT:          st0: |(x,y,z)|
    27                                  ; MODIFIES:     st0-3
    28                                  ; CALLS:        none
    29                                  ; DETAILS:      sqrt(x*x + y*y + z*z)
    30                                  norm:
    31 00000000 DDD3                      fst   st3 ; x y z x
    32 00000002 DECB                      fmulp st3 ; y z x*x
    33 00000004 DDD3                      fst   st3 ; y z x*x y
    34 00000006 DECB                      fmulp st3 ; z x*x y*y
    35 00000008 DDD3                      fst   st3 ; z x*x y*y z
    36 0000000A DECB                      fmulp st3 ; x*x y*y z*z
    37 0000000C DEC1                      faddp st1 ; x*x+y*y z*z
    38 0000000E DEC1                      faddp st1 ; x*x+y*y+z*z
    39 00000010 D9FA                      fsqrt     ; sqrt(...)
    40                                  
    41 00000012 C3                        ret       ; leave
    42                                  
    43                                  ;------------------------------------------------------------------------------
    44                                  ; PROCEDURE:    dotp
    45                                  ; IN:           st0-2: v, st3-5: w
    46                                  ; OUT:          st0: v . w
    47                                  ; MODIFIES:     st0-5
    48                                  ; CALLS:        none
    49                                  ; DETAILS:      dot product
    50                                  dotp:
    51                                    ; x y z a b c
    52 00000013 DECB                      fmulp st3 ; y z x*a b c
    53 00000015 DECB                      fmulp st3 ; z x*a y*b c
    54 00000017 DECB                      fmulp st3 ; x*a y*b z*c
    55 00000019 DEC1                      faddp st1 ; x*a+y*b z*c
    56 0000001B DEC1                      faddp st1 ; x*a+y*b+z*c
    57                                  
    58 0000001D C3                        ret
    59                                  
    60                                  ;------------------------------------------------------------------------------
    61                                  ; PROCEDURE:    cross
    62                                  ; IN:           st0-2: v, st3-5: w
    63                                  ; OUT:          st0-2: v x w
    64                                  ; MODIFIES:     
    65                                  ; CALLS:        
    66                                  ; DETAILS:      cross product
    67                                  cross:
    68                                    ; x y z a b c
    69                                  
    70                                    ; calculate x*b
    71 0000001E DDD6                      fst st6 ; x y z a b c x
    72 00000020 D8CC                      fmul  st4 ; x*b y z a b c x
    73 00000022 DDDF                      fstp  st7 ; y z a b c x x*b
    74                                  
    75                                    ; calculate y*a
    76 00000024 DDD7                      fst   st7 ; y z a b c x x*b y
    77 00000026 D8CA                      fmul  st2 ; y*a z a b c x x*b y
    78                                  
    79                                    ; calculate u3 = x*b-y*a
    80 00000028 DEEE                      fsubp st6 ; z a b c x x*b-y*a y
    81                                  
    82                                    ; calculate z*a then discard a
    83 0000002A DCC9                      fmul to st1 ; z z*a b c x u3 y
    84                                  
    85                                    ; calculate x*c then discard x
    86 0000002C D9C3                      fld st3 ; c z z*a b c x u3 y
    87 0000002E DECD                      fmulp st5 ; z z*a b c x*c u3 y
    88                                  
    89                                    ; calculate u2 = z*a-x*c
    90 00000030 D9C1                      fld st1 ; z*a z z*a b c x*c u3 y
    91 00000032 DEE5                      fsubrp st5 ; z z*a b c z*a-x*c u3 y
    92                                    
    93                                    ; calculate z*b and discard z, b
    94 00000034 D8CA                      fmul st2 ; z*b z*a b c u2 u3 y
    95                                  
    96                                    ; calculate y*c and discard y, c
    97 00000036 D9C6                      fld  st6 ; y z*b z*a b c u2 u3 y
    98 00000038 DECC                      fmulp st4 ; z*b z*a b y*c u2 u3 y
    99                                  
   100                                    ; calcelate y*c-z*b
   101 0000003A DEEB                      fsubp st3 ; z*a b y*c-z*b u2 u3 y
   102                                  
   103                                    ; _ _ u1 u2 u3 _
   104                                    ; pop twice
   105 0000003C DDD8                      fstp st0
   106 0000003E DDD8                      fstp st0
   107                                    ; u1 u2 u3
   108                                  
   109 00000040 C3                        ret
   110                                  
   111                                  _start:
   112 00000041 9BDBE3                    finit ; reset fpuregs
   113 00000044 DB2C25[3C000000]          fld tword [c]
   114 0000004B DB2C25[32000000]          fld tword [b]
   115 00000052 DB2C25[28000000]          fld tword [a]
   116 00000059 DB2C25[1E000000]          fld tword [z]
   117 00000060 DB2C25[14000000]          fld tword [y]
   118 00000067 DB2C25[0A000000]          fld tword [x] ; x y z a b c
   119 0000006E E8ABFFFFFF                call cross     ; dotp
   120                                  
   121 00000073 DDD8                      fstp st0
   122 00000075 DB2C25[00000000]          fld tword [num]
   123                                    ; fldz          ; 0 dotp
   124                                    
   125 0000007C DBF1                      fcomi st1     ; 0 ? dotp
   126 0000007E 7204                      jb .less
   127 00000080 741A                      je .eq
   128 00000082 7730                      ja .great
   129                                    
   130                                  .less:
   131 00000084 B804000000                mov eax, 4
   132 00000089 BB01000000                mov ebx, 1
   133 0000008E B9[46000000]              mov ecx, msg1
   134 00000093 BA05000000                mov edx, len1
   135 00000098 CD80                      int 80h
   136 0000009A EB30                      jmp .exit
   137                                  
   138                                  .eq:
   139 0000009C B804000000                mov eax, 4
   140 000000A1 BB01000000                mov ebx, 1
   141 000000A6 B9[4B000000]              mov ecx, msg2
   142 000000AB BA03000000                mov edx, len2
   143 000000B0 CD80                      int 80h
   144 000000B2 EB18                      jmp .exit
   145                                  
   146                                  .great:
   147 000000B4 B804000000                mov eax, 4
   148 000000B9 BB01000000                mov ebx, 1
   149 000000BE B9[4E000000]              mov ecx, msg3
   150 000000C3 BA06000000                mov edx, len3
   151 000000C8 CD80                      int 80h
   152 000000CA EB00                      jmp .exit
   153                                  
   154                                  
   155                                  .exit:
   156 000000CC B801000000                mov rax, 1
   157 000000D1 BB00000000                mov rbx, 0
   158 000000D6 CD80                      int 80h
   159                                  
